from bs4 import BeautifulSoup
from bs4.element import Comment
import os
import requests

def tag_visible(element):
    if element.parent.name in ['style', 'script', 'head', 'title', 'meta', '[document]']:
        return False
    if isinstance(element, Comment):
        return False
    return True

def get_texts_in_soup(item):
    texts = item.find_all(text=True)
    visible_texts = list(filter(tag_visible, texts))
    visible_texts = [str(s).strip() for s in visible_texts]
    visible_texts = [s for s in visible_texts if len(s) > 0]

    return visible_texts

def retrieve_texts(link, content_filter = None):
    # User agent is needed for some sites.
    page = requests.get(link, headers={ 'User-Agent': 'Mozilla/5.0' })


    soup = BeautifulSoup(page.content.decode('utf-8', 'ignore'), 'html.parser')

    output = []

    # From: https://stackoverflow.com/questions/1936466/beautifulsoup-grab-visible-webpage-text
    if content_filter is not None:
        selected_items = soup.select(content_filter)

        for item in selected_items:
            output.extend(get_texts_in_soup(item))
    else:
        output.extend(get_texts_in_soup(soup))

    return output

def translate_web(link, app_pipeline, content_filter = None):
    """
    Given a link to a webpage, retrieve all text inside it and translate it with the app pipeline. Returns a list of strings.

    This may be unsafe / unreliable, depending on the webpage.
    """
    texts = retrieve_texts(link, content_filter) # Get untranslated texts as list of strings.

    translated_texts = []

    for t in texts:
        o = app_pipeline.process_task2(t, translation_force_words=None, socketio=None)

        if len(o) > 0:
            translated_texts.append(o[0])

    return translated_texts

def open_notepad_with_texts(translated_texts):
    """
    Opens notepad and writes the list of translated texts to it. One text per line, separated by a line of whitespace.

    NOTE: Only works on windows.
    """
    with open('last_webpage.txt', 'w') as f:
        f.write('[NOTE]: This file was automagically generated by Mango. The contents will be replaced if another webpage is sent for processing.\n\n')

        f.write(
            '\n\n'.join(translated_texts).strip(),
        )

    # See: https://stackoverflow.com/questions/6178154/open-a-text-file-using-notepad-as-a-help-file-in-python
    os.startfile('last_webpage.txt')
